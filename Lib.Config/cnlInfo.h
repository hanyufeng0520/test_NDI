#pragma once
#include <string>

#define ID_LOCAL_Cam_MAX      ID_CAM_MAX
//#define ID_LOCAL_Cam_MAX      ID_ALL_Cam_MAX
//#define ID_Cam_MAX      ID_LOCAL_Cam_MAX
#define NB_LOCAL_MAXCAM    ID_Cam_MAX
#define NB_ALL_CAMERA       ID_Cam_MAX
#define NB_CAMERA		ID_Cam_MAX
#define NB_BMR_RECORDER	(ID_Cam_MAX-1)
#define NB_REPLAY		(NB_CAMERA*3)
#define NB_PLAYER		Cnl_MAX
#define NB_PLAYOUT		8
#define NB_MAX_PHASE	10
#define NB_LIVETGA		2
enum CamID :uint32_t  //this enum only using in BE.
{
	ID_InValidCam = 0xFFFFFFF,
	ID_Cam_InValid = ID_InValidCam,
	ID_Cam_0 = 0,
	ID_Cam_1,
	ID_Cam_2,
	ID_Cam_3,
	ID_Cam_4,
	ID_Cam_5,
	ID_Cam_6,
	ID_Cam_7,
	ID_Cam_8,
	ID_Cam_9,
	ID_Cam_10,
	ID_Cam_11,
	ID_Cam_12,
	ID_Cam_13,
	ID_Cam_14,
	ID_Cam_15,
	ID_Cam_PGMDirty,
	ID_Cam_PGMClean,
	ID_Cam_Import,
	ID_Cam_MAX,
	ID_Cam_ASIO = ID_Cam_MAX,
};

enum CnlID :uint32_t
{
	ID_Replay1_0,
	ID_Replay1_15 = 15,
	ID_Replay1_31 = 31,
	ID_Replay1_PGMDirty = 32,
	ID_Replay1_PGMClean = 33,
	ID_Replay1_Import = 34,
	ID_Replay2_0 = 50,
	ID_Replay2_15 = 65,
	ID_Replay2_31 = 81,
	ID_Replay2_PGMDirty = 82,
	ID_Replay2_PGMClean = 83,
	ID_Replay2_Import = 84,
	ID_PGM1 = 100,
	ID_PRV1,
	ID_PGM1v,
	ID_PGM2,
	ID_PGM2v,
	ID_PRV2,
	ID_PGM3,
	ID_PGM3v,
	ID_PRV3,
	ID_PGM4,
	ID_PGM4v,
	ID_PRV4,
	ID_PGM5,
	ID_PGM5v,
	ID_PRV5,
	ID_PGM6,
	ID_PGM6v,
	ID_PRV6,
	ID_PGM7,
	ID_PGM7v,
	ID_PRV7,
	ID_PGM8,
	ID_PGM8v,
	ID_PRV8,
	ID_Live_0 = 150,
	ID_Live_15 = 165,
	ID_Live_31 = 181,
	ID_Live_PGMDirty = 182,
	ID_Live_PGMClean = 183,
	ID_Live_Import = 184,
	ID_Live_PGM2 = 185,
	ID_Live_PGM3 = 186,
	ID_Live_PGM4 = 187,
	ID_Live_PGM5 = 188,
	ID_Live_PGM6 = 189,
	ID_Live_PGM7 = 190,
	ID_Live_PGM8 = 191,
	ID_Replay3_0 = 192,
	ID_Replay3_15 = 207,
	ID_Replay3_31 = 223,
	ID_Replay3_PGMDirty = 224,
	ID_Replay3_PGMClean = 225,
	ID_Replay3_Import = 226,
	ID_PGM2_480_270 = 227,    //only used for Dll.FrameReceiver for cnl register
	ID_PGM3_480_270,		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM4_480_270,		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM5_480_270,		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM6_480_270,		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM7_480_270,		 //only used for Dll.FrameReceiver for cnl register
	ID_PGM8_480_270,		 //only used for Dll.FrameReceiver for cnl register
	ID_TGA_0,				  //only used for Dll.FrameReceiver for cnl register
	ID_TGA_1,				  //only used for Dll.FrameReceiver for cnl register
	ID_Cnl_Max
};

enum CnlIdx
{
	Cnl_Replay1_0,
	Cnl_Replay1_1,
	Cnl_Replay1_2,
	Cnl_Replay1_3,
	Cnl_Replay1_4,
	Cnl_Replay1_5,
	Cnl_Replay1_6,
	Cnl_Replay1_7,
	Cnl_Replay1_8,
	Cnl_Replay1_9,
	Cnl_Replay1_10,
	Cnl_Replay1_11,
	Cnl_Replay1_12,
	Cnl_Replay1_13,
	Cnl_Replay1_14,
	Cnl_Replay1_15,
	Cnl_Replay1_PGMDirty,
	Cnl_Replay1_PGMClean,
	Cnl_Replay1_Import,
	Cnl_Replay2_0,
	Cnl_Replay2_1,
	Cnl_Replay2_2,
	Cnl_Replay2_3,
	Cnl_Replay2_4,
	Cnl_Replay2_5,
	Cnl_Replay2_6,
	Cnl_Replay2_7,
	Cnl_Replay2_8,
	Cnl_Replay2_9,
	Cnl_Replay2_10,
	Cnl_Replay2_11,
	Cnl_Replay2_12,
	Cnl_Replay2_13,
	Cnl_Replay2_14,
	Cnl_Replay2_15,
	Cnl_Replay2_PGMDirty,
	Cnl_Replay2_PGMClean,
	Cnl_Replay2_Import,
	Cnl_Replay3_0,
	Cnl_Replay3_1,
	Cnl_Replay3_2,
	Cnl_Replay3_3,
	Cnl_Replay3_4,
	Cnl_Replay3_5,
	Cnl_Replay3_6,
	Cnl_Replay3_7,
	Cnl_Replay3_8,
	Cnl_Replay3_9,
	Cnl_Replay3_10,
	Cnl_Replay3_11,
	Cnl_Replay3_12,
	Cnl_Replay3_13,
	Cnl_Replay3_14,
	Cnl_Replay3_15,
	Cnl_Replay3_PGMDirty,
	Cnl_Replay3_PGMClean,
	Cnl_Replay3_Import,
	Cnl_PGM1,
	Cnl_PRV1,
	Cnl_PGM1v,
	Cnl_PGM2,
	Cnl_PGM2v,
	Cnl_PRV2,
	Cnl_PGM3,
	Cnl_PGM3v,
	Cnl_PRV3,
	Cnl_PGM4,
	Cnl_PGM4v,
	Cnl_PRV4,
	Cnl_PGM5,
	Cnl_PGM5v,
	Cnl_PRV5,
	Cnl_PGM6,
	Cnl_PGM6v,
	Cnl_PRV6,
	Cnl_PGM7,
	Cnl_PGM7v,
	Cnl_PRV7,
	Cnl_PGM8,
	Cnl_PGM8v,
	Cnl_PRV8,
	Cnl_MAX
};